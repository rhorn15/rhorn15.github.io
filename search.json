[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "DANL Project",
    "section": "",
    "text": "About this project 👏\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg &lt;- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n▇▆▆▃▁\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n▇▁▁▁▇\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n▇▁▇▁▇\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n▆▇▃▁▁\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n▅▅▇▁▁"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) 🚙 🚚 🚐.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "danl200-hw5-Horn-Ryan.qmd/danl200-hw5-Horn-Ryan.qmd.html",
    "href": "danl200-hw5-Horn-Ryan.qmd/danl200-hw5-Horn-Ryan.qmd.html",
    "title": "danl200-hw5-Horn-Ryan.qmd",
    "section": "",
    "text": "Below is a link to my GitHub repository.\nhref: https://github.com/rhorn15/rhorn15.github.io\nBelow is a link to my website\nhref:\nhttps://rhorn15.github.io/\nThe answers for Q2 of the homework can be found in the blog section of my website or right here.\nhref: https://rhorn15.github.io/posts/NFL%202022%20Data/"
  },
  {
    "objectID": "danl200-hw5-Horn-Ryan.qmd/danl200-hw5-Horn-Ryan.qmd.html#q1a",
    "href": "danl200-hw5-Horn-Ryan.qmd/danl200-hw5-Horn-Ryan.qmd.html#q1a",
    "title": "danl200-hw5-Horn-Ryan.qmd",
    "section": "",
    "text": "Below is a link to my GitHub repository.\nhref: https://github.com/rhorn15/rhorn15.github.io\nBelow is a link to my website\nhref:\nhttps://rhorn15.github.io/\nThe answers for Q2 of the homework can be found in the blog section of my website or right here.\nhref: https://rhorn15.github.io/posts/NFL%202022%20Data/"
  },
  {
    "objectID": "quarto-template.html",
    "href": "quarto-template.html",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "",
    "text": "oj &lt;- read_csv('https://bcdanl.github.io/data/dominick_oj.csv')\nnvars &lt;- format(round(ncol(oj), 0), \n                nsmall=0, \n                big.mark=\",\") \nnobs &lt;- format(round(nrow(oj), 0), \n                nsmall=0, \n                big.mark=\",\")\nThe number of variables is 4; the number of observations is 28,947.\nRoses are red\nviolets are blue."
  },
  {
    "objectID": "quarto-template.html#data-summary",
    "href": "quarto-template.html#data-summary",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.1 Data Summary",
    "text": "2.1 Data Summary\n\nSummary statistics (Use skimr::skim())"
  },
  {
    "objectID": "quarto-template.html#data-visualization",
    "href": "quarto-template.html#data-visualization",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.2 Data Visualization",
    "text": "2.2 Data Visualization\n\noj %&gt;% \n  ggplot(aes(x = log(sales), \n             y = log(price),\n             color = brand)) +\n  geom_point(alpha = .1) +\n  geom_smooth(method = lm, se = F) +\n  facet_wrap(.~ad) +\n  theme_bw() +\n  theme(legend.position = 'top')"
  },
  {
    "objectID": "quarto-template.html#data-transformation",
    "href": "quarto-template.html#data-transformation",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.3 Data Transformation",
    "text": "2.3 Data Transformation\n\nob_sum1 &lt;- oj %&gt;% \n  group_by(brand, ad) %&gt;% \n  summarise(sales_tot = sum(sales, na.rm = T),\n            price_mean = round(mean(price, na.rm = T), 2))"
  },
  {
    "objectID": "quarto-template.html#analysis",
    "href": "quarto-template.html#analysis",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.4 Analysis",
    "text": "2.4 Analysis"
  },
  {
    "objectID": "quarto-template.html#quotes",
    "href": "quarto-template.html#quotes",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.5 Quotes",
    "text": "2.5 Quotes\n\nQuote with &gt;\n\n\n“The truth is rarely pure and never simple.”\n— Oscar Wilde"
  },
  {
    "objectID": "quarto-template.html#inserting-figures",
    "href": "quarto-template.html#inserting-figures",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.6 Inserting Figures",
    "text": "2.6 Inserting Figures\nFor a demonstration of a DANL tiger, see Figure 1.\n\n\n\n\n\nFigure 1: DANL Tiger"
  },
  {
    "objectID": "quarto-template.html#inserting-a-html-page",
    "href": "quarto-template.html#inserting-a-html-page",
    "title": "DANL 200: Introduction to Data AnalyticsProject",
    "section": "2.7 Inserting a HTML page",
    "text": "2.7 Inserting a HTML page"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "Thank you for checking this out! This blog is to display some analytics of various data sets, hope you enjoy!"
  },
  {
    "objectID": "posts/Spotify/index.html",
    "href": "posts/Spotify/index.html",
    "title": "Spotify Analytics",
    "section": "",
    "text": "Here are some interesting analytics related to spotify!\n\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\n\n\nBoxplot of Artist Rankings\n\n\n\n\nHere we can see that “pos” (position of track within a playlist), doesn’t vary a significant amount between these top ten artists.\n\n\n\n\n\nThis histogram visualizes the distribution of track positions within playlists.\n\n\n\n\n\nThis bar plot shows the top 10 artists based on the total number of tracks in playlists."
  },
  {
    "objectID": "posts/Restaurant Inspection/index.html",
    "href": "posts/Restaurant Inspection/index.html",
    "title": "Restaurant Inspections",
    "section": "",
    "text": "Listed here are some analytics related to restaurants in NYC.\n\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\n\nAs we can see from the graph above, data from NYC restaurants, critical score varies more as the you move from category A, B, and C.\n\n\n\n\n\nThis bar plot shows the top 10 cuisine types based on the number of restaurants.\n\n\n\n\n\nThis histogram visualizes the distribution of inspection scores for restaurants."
  },
  {
    "objectID": "posts/Beer Markets/index.html",
    "href": "posts/Beer Markets/index.html",
    "title": "Beer Markets",
    "section": "",
    "text": "Here is some analytics in relation to Beer Markets!\n\n\n\n\n\n\nThis scatter plot visualizes the relationship between the quantity of items purchased and the corresponding dollar spent.\n\n\n\n\n\nThis bar plot shows the total dollar spent on each beer brand.\n\n\n\n\n\nThis box plot visualizes the distribution of the price per fl.oz. based on whether the item was promoted."
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html",
    "href": "posts/NFL 2022 Data/index.html",
    "title": "NFL 2022 Data",
    "section": "",
    "text": "Here is some analytics in relation to Data from the 2022 NFL season!"
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html#q2a",
    "href": "posts/NFL 2022 Data/index.html#q2a",
    "title": "NFL 2022 Data",
    "section": "Q2a",
    "text": "Q2a\nIn data.frame, NFL2022_stuffs, remove observations for which values of posteam is missing.\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nAnswer:\n\nNFL2022_stuffs_cleaned &lt;- NFL2022_stuffs %&gt;% \n  filter(!is.na(posteam))\n\nhead(NFL2022_stuffs_cleaned)\n\n  play_id         game_id drive week posteam qtr down half_seconds_remaining\n1      43 2022_01_BAL_NYJ     1    1     NYJ   1   NA                   1800\n2      68 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1796\n3      89 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1769\n4     115 2022_01_BAL_NYJ     1    1     NYJ   1    2                   1765\n5     136 2022_01_BAL_NYJ     1    1     NYJ   1    3                   1741\n6     172 2022_01_BAL_NYJ     1    1     NYJ   1    4                   1733\n  pass        wp\n1    0 0.5462618\n2    0 0.5469690\n3    1 0.5725734\n4    0 0.5545366\n5    1 0.5401673\n6    0 0.4880532"
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html#q2b",
    "href": "posts/NFL 2022 Data/index.html#q2b",
    "title": "NFL 2022 Data",
    "section": "Q2b",
    "text": "Q2b\n-Summarize the mean value of pass for each posteam when all the following conditions hold:\n\nwp is greater than 20% and less than 75%;\ndown is less than or equal to 2; and\nhalf_seconds_remaining is greater than 120\n\nAnswer:\n\nfiltered_data &lt;- NFL2022_stuffs %&gt;%\n  filter(\n    !is.na(posteam),       \n    wp &gt; 0.2 & wp &lt; 0.75,   \n    down &lt;= 2,              \n    half_seconds_remaining &gt; 120  \n  )\n\nsummary_data &lt;- filtered_data %&gt;%\n  group_by(posteam) %&gt;%\n  summarize(mean_pass = mean(pass, na.rm = TRUE))\n\nprint(summary_data)\n\n# A tibble: 32 × 2\n   posteam mean_pass\n   &lt;chr&gt;       &lt;dbl&gt;\n 1 ARI         0.553\n 2 ATL         0.4  \n 3 BAL         0.520\n 4 BUF         0.604\n 5 CAR         0.458\n 6 CHI         0.420\n 7 CIN         0.657\n 8 CLE         0.491\n 9 DAL         0.474\n10 DEN         0.493\n# ℹ 22 more rows"
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html#q2c",
    "href": "posts/NFL 2022 Data/index.html#q2c",
    "title": "NFL 2022 Data",
    "section": "Q2c",
    "text": "Q2c\n-Provide both (1) a ggplot code with geom_point() using the resulting data.frame in Q2b and (2) a simple comments to describe the mean value of pass for each posteam. In the ggplot, reorder the posteam categories based on the mean value of pass in ascending or in descending order.\nAnswer:\n\nlibrary(ggplot2)\n# Load necessary libraries\nlibrary(ggplot2)\n\n\nsummary_data &lt;- summary_data %&gt;%\n  mutate(posteam = factor(posteam, levels = summary_data[order(mean_pass, decreasing = TRUE), \"posteam\"]))\n\n\nggplot(summary_data, aes(x = posteam, y = mean_pass, label = posteam)) +\n  geom_point() +\n  geom_text(nudge_y = 0.02, size = 3, check_overlap = TRUE) + \n  labs(title = \"Mean Value of pass for Each posteam\",\n       x = \"posteam\",\n       y = \"Mean pass\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\nWarning: Removed 32 rows containing missing values (`geom_text()`)."
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html#q2d",
    "href": "posts/NFL 2022 Data/index.html#q2d",
    "title": "NFL 2022 Data",
    "section": "Q2d",
    "text": "Q2d\n\nCreate the data.frame, NFL2022_stuffs_EPA, that includes\n\n\nAll the variables in the data.frame, NFL2022_stuffs;\nThe variables, passer, receiver, and epa, from the data.frame, NFL2022_epa. by joining the two data.frames.\n\n\nIn the resulting data.frame, NFL2022_stuffs_EPA, remove observations with NA in passer.\n\nAnswer:\n\nNFL2022_epa &lt;- read.csv('https://bcdanl.github.io/data/NFL2022_epa.csv')\n\nNFL2022_stuffs_EPA &lt;- left_join(NFL2022_stuffs, NFL2022_epa, by = c(\"play_id\", \"game_id\", \"drive\", \"posteam\"))\n\nNFL2022_stuffs_EPA &lt;- NFL2022_stuffs_EPA %&gt;%\n  filter(!is.na(passer))\n\nhead(NFL2022_stuffs_EPA)\n\n  play_id         game_id drive week posteam qtr down half_seconds_remaining\n1      89 2022_01_BAL_NYJ     1    1     NYJ   1    1                   1769\n2     136 2022_01_BAL_NYJ     1    1     NYJ   1    3                   1741\n3     202 2022_01_BAL_NYJ     2    1     BAL   1    1                   1722\n4     230 2022_01_BAL_NYJ     2    1     BAL   1    2                   1701\n5     301 2022_01_BAL_NYJ     2    1     BAL   1    2                   1579\n6     412 2022_01_BAL_NYJ     3    1     NYJ   1    2                   1451\n  pass        wp   receiver    passer         epa\n1    1 0.5725734  Mi.Carter  J.Flacco -0.49219242\n2    1 0.5401673       &lt;NA&gt;  J.Flacco -2.40220026\n3    1 0.4958201  R.Bateman L.Jackson  0.07512748\n4    1 0.4965942 D.Duvernay L.Jackson -0.10512029\n5    1 0.5067707 D.Duvernay L.Jackson  0.41113183\n6    1 0.5001284    Br.Hall  J.Flacco -0.17972556"
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html#q2e",
    "href": "posts/NFL 2022 Data/index.html#q2e",
    "title": "NFL 2022 Data",
    "section": "Q2e",
    "text": "Q2e\n\nProvide both (1) a single ggplot and (2) a simple comment to describe the NFL weekly trend of weekly mean value of epa for each of the following two passers,\n\n\n“J.Allen”\n“P.Mahomes”\n\nAnswer:\n\nggplot(NFL2022_stuffs_EPA, aes(x = week, y = epa, color = passer, linetype = passer)) +\n  geom_line(linewidth = 1.2) +\n  labs(title = \"NFL Weekly Trend of Mean EPA for Passers\",\n       x = \"Week\",\n       y = \"Mean EPA\") +\n  scale_color_manual(values = c(\"J.Allen\" = \"blue\", \"P.Mahomes\" = \"red\")) +\n  scale_linetype_manual(values = c(\"J.Allen\" = \"solid\", \"P.Mahomes\" = \"dashed\")) +\n  theme_minimal()\n\n\n\n\nThis line plot illustrates the weekly trend of the mean value of Expected Points Added (EPA) for two excellent passers."
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html#q2f",
    "href": "posts/NFL 2022 Data/index.html#q2f",
    "title": "NFL 2022 Data",
    "section": "Q2f",
    "text": "Q2f\n\nCalculate the difference between the mean value of epa for “J.Allen” the mean value of epa for “P.Mahomes” for each value of week.\n\nAnswer:\n\nepa_difference &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(week) %&gt;%\n  summarise(mean_epa_difference = mean(epa[passer == \"J.Allen\"]) - mean(epa[passer == \"P.Mahomes\"]))\n\nprint(epa_difference)\n\n# A tibble: 22 × 2\n    week mean_epa_difference\n   &lt;int&gt;               &lt;dbl&gt;\n 1     1             -0.169 \n 2     2              0.339 \n 3     3             -0.0763\n 4     4             -0.0803\n 5     5              0.325 \n 6     6              0.173 \n 7     7            NaN     \n 8     8            NaN     \n 9     9             -0.304 \n10    10             -0.429 \n# ℹ 12 more rows"
  },
  {
    "objectID": "posts/NFL 2022 Data/index.html#q2g",
    "href": "posts/NFL 2022 Data/index.html#q2g",
    "title": "NFL 2022 Data",
    "section": "Q2g",
    "text": "Q2g\n\nSummarize the resulting data.frame in Q2d, with the following four variables:\n\nposteam: String abbreviation for the team with possession.\npasser: Name of the player who passed a ball to a receiver by initially taking a three-step drop, and backpedaling into the pocket to make a pass. (Mostly, they are quarterbacks.)\nmean_epa: Mean value of epa in 2022 for each passer\nn_pass: Number of observations for each passer\n\nThen find the top 10 NFL passers in 2022 in terms of the mean value of epa, conditioning that n_pass must be greater than or equal to the third quantile level of n_pass.\n\nAnswer:\n\npasser_summary &lt;- NFL2022_stuffs_EPA %&gt;%\n  group_by(posteam, passer) %&gt;%\n  summarise(\n    mean_epa = mean(epa, na.rm = TRUE),\n    n_pass = n()\n  )\n\n`summarise()` has grouped output by 'posteam'. You can override using the\n`.groups` argument.\n\nquantile_threshold &lt;- quantile(passer_summary$n_pass, 0.75)\n\ntop_passers &lt;- passer_summary %&gt;%\n  filter(n_pass &gt;= quantile_threshold) %&gt;%\n  arrange(desc(mean_epa)) %&gt;%\n  slice_head(n = 10)\n\nprint(top_passers)\n\n# A tibble: 29 × 4\n# Groups:   posteam [29]\n   posteam passer     mean_epa n_pass\n   &lt;chr&gt;   &lt;chr&gt;         &lt;dbl&gt;  &lt;int&gt;\n 1 ARI     K.Murray     0.0163    465\n 2 ATL     M.Mariota    0.0251    370\n 3 BAL     L.Jackson    0.0549    398\n 4 BUF     J.Allen      0.172     785\n 5 CHI     J.Fields    -0.0455    469\n 6 CIN     J.Burrow     0.153     854\n 7 CLE     J.Brissett   0.0912    445\n 8 DAL     D.Prescott   0.147     529\n 9 DEN     R.Wilson    -0.0163    609\n10 DET     J.Goff       0.171     661\n# ℹ 19 more rows"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ryan Horn",
    "section": "",
    "text": "Hello, my name is Ryan Horn, I was born and raised in Geneseo NY, and have been in the military for 4 years. I love data analytics and hope to make a career out of it."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Ryan Horn",
    "section": "Education",
    "text": "Education\nState University of New York at Geneseo | Geneseo, NY  Data Analytics Student| Aug 2023 - Dec 2025"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Ryan Horn",
    "section": "Experience",
    "text": "Experience\nUS Army Infantryman July 2020 - July 2026"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Ryan Horn’s Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nRyan Horn\n\n\n1 min\n\n\n\n\n\n\n  \n\n\n\n\nSpotify Analytics\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nRyan Horn\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nRestaurant Inspections\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nRyan Horn\n\n\n2 min\n\n\n\n\n\n\n  \n\n\n\n\nNFL 2022 Data\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nRyan Horn\n\n\n4 min\n\n\n\n\n\n\n  \n\n\n\n\nBeer Markets\n\n\n\n\n\n\n\n\n\nDec 11, 2023\n\n\nRyan Horn\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  }
]